#!/bin/bash
# ---------------------------------------------------
# Thumbnailer for Ms Office documents
#
# Procedure :
#   http://bernaerts.dyndns.org/linux/76-gnome/325-gnome-shell-generate-msoffice-thumbnail-nautilus
# Depends on :
#   * gvfs-copy (gvfs-bin package)
#   * libreoffice
#   * mimetype (libfile-mimeinfo-perl package)
#   * pbmmake, pngtopnm, pnmtopng, pnmscalefixed and pnmcomp (netpbm package)
# Parameters :
#   $1 - URI of office file
#   $2 - full path of generated thumbnail
#   $3 - height of thumbnail in pixels
# Revision history :
# 11/11/2014, V1.0 - Creation by N. Bernaerts
# 15/11/2014, V2.0 - Change to URI and GVFS to handle thumbnails on network shares
# 31/07/2015, V2.1 - More robust unoconv command line (thanks to Vaderqk)
# 07/10/2017, V2.2 - Speedup with netpbm tools
# 10/03/2018, V3.0 - Switch from unoconv to libreoffice in headless mode
# 06/11/2018, V3.1 - Handle libreoffice and soffice binaries
# 08/11/2018, V3.2 - Handle gio and gvfs-copy tools
# ---------------------------------------------------

# check libreoffice availability
CMD_OFFICE="libreoffice"
command -v "${CMD_OFFICE}" >/dev/null 2>&1 || CMD_OFFICE="soffice"
command -v "${CMD_OFFICE}" >/dev/null 2>&1 || { echo "[error] libreoffice missing"; exit 1; }

# check gio availability
CMD_COPY="gio"
command -v "${CMD_COPY}" >/dev/null 2>&1 || CMD_COPY="gvfs-copy"
command -v "${CMD_COPY}" >/dev/null 2>&1 || { echo "[error] gio or gvfs-copy missing"; exit 1; }

# check tools availability
command -v mimetype >/dev/null 2>&1 || { echo "[error] mimetype missing"; exit 1; }
command -v pbmmake >/dev/null 2>&1 || { echo "[error] pbmmake missing"; exit 1; }
command -v pngtopnm >/dev/null 2>&1 || { echo "[error] pngtopnm missing"; exit 1; }
command -v pnmscalefixed >/dev/null 2>&1 || { echo "[error] pnmscalefixed missing"; exit 1; }
command -v pnmcomp >/dev/null 2>&1 || { echo "[error] pnmcomp missing"; exit 1; }
command -v pnmtopng >/dev/null 2>&1 || { echo "[error] pnmtopng missing"; exit 1; }

# get parameters
SCRIPT_NAME=$(basename $0)
FILE_URI="$1"
FILE_THUMB="$2"
SIZE="$3"

# get filename extension
FILE_EXT=$(echo "${FILE_URI}" | sed 's/^.*\.\([a-zA-Z0-9]*\)$/\1/')
[ "${FILE_EXT}" = "${FILE_URI}" ] && FILE_EXT="none"

# generate temporary files and directory
TMP_DIR=$(mktemp -t -d "thumb-ms-XXXXXXXX")
TMP_LOCAL="${TMP_DIR}/thumbnail.${FILE_EXT}"
TMP_PNM="${TMP_DIR}/thumbnail.pnm"

# set working path
PATH_SYSTEM="/usr/local/sbin/${SCRIPT_NAME}.res"
PATH_CACHE="$HOME/.cache/${SCRIPT_NAME}"

# if needed, create cache directory
[ ! -d "${PATH_CACHE}" ] && mkdir --parent "${PATH_CACHE}"

# if file is a remote one
URI_TYPE="${FILE_URI:0:4}"
if [ "${URI_TYPE}" = "file" ]
then
	# convert URI to local path
	FILE_PATH=$(printf '%b' "${FILE_URI//%/\\x}")

	# extract local path
	FILE_LOCAL="${FILE_PATH:7}"
else
	# copy input file to temporary local file
	[ "${CMD_COPY}" = "gio" ] && "${CMD_COPY}" copy "${FILE_URI}" "${TMP_LOCAL}" || "${CMD_COPY}" "${FILE_URI}" "${TMP_LOCAL}"
	FILE_LOCAL="${TMP_LOCAL}"	
fi

# get the file mime type (application/msword, ...)
MIMETYPE=$(mimetype -b "${FILE_LOCAL}")

# determine icon type according to mime type
case ${MIMETYPE} in

	# text
	"application/msword" | \
	"application/vnd.ms-word" | \
	"application/vnd.openxmlformats-officedocument.wordprocessingml.document" )
	LIBREOFFICE_TYPE="odt"
	;;

	# spreadsheet
	"application/vnd.ms-excel" | \
	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" | \
	"application/vnd.openxmlformats-officedocument.spreadsheetml.template" )
	LIBREOFFICE_TYPE="ods"
	;;

	# presentation
	"application/vnd.ms-powerpoint" | \
	"application/vnd.openxmlformats-officedocument.presentationml.presentation" | \
	"application/vnd.openxmlformats-officedocument.presentationml.template" | \
	"application/vnd.openxmlformats-officedocument.presentationml.slideshow" )
	LIBREOFFICE_TYPE="odp"
	;;

	* )
	;;
esac

# if needed, create tag and mask of document type
DOC_TAG="${PATH_CACHE}/${LIBREOFFICE_TYPE}.pnm"
DOC_ALPHA="${PATH_CACHE}/${LIBREOFFICE_TYPE}-alpha.pnm"
[ ! -f "${DOC_TAG}" ] && pngtopnm "${PATH_SYSTEM}/msoffice-${LIBREOFFICE_TYPE}.png" > "${DOC_TAG}"
[ ! -f "${DOC_ALPHA}" ] && pngtopnm -alpha "${PATH_SYSTEM}/msoffice-${LIBREOFFICE_TYPE}.png" > "${DOC_ALPHA}"

# convert first page to PNG
"${CMD_OFFICE}" "-env:UserInstallation=file://${TMP_DIR}" --headless --convert-to png --outdir "${TMP_DIR}" "${FILE_LOCAL}"

# convert PNG to PNM
FILE_NAME=$(basename "${FILE_LOCAL}")
FILE_NAME="${FILE_NAME%.*}"
pngtopnm "${TMP_DIR}/${FILE_NAME}.png" | pnmscalefixed -xysize 256 256 - > "${TMP_PNM}"

# generate thumbnail
pbmmake -white 188 256 | pnmcomp -xoff 2 -yoff=52 "${TMP_PNM}" - | pnmcomp -align left -valign top -alpha "${DOC_ALPHA}" "${DOC_TAG}" - | pnmscalefixed -xysize ${SIZE} ${SIZE} - | pnmtopng -downscale - > "${FILE_THUMB}"

# remove temporary directory
rm -r "${TMP_DIR}"
