#!/usr/bin/env bash
# --------------------------------------------
#  Rotate a list of image files
#
#  Depends on :
#    * mimetype (libfile-mimeinfo-perl package)
#    * exiftool (libimage-exiftool-perl package)
#    * pngtopnm, pnmtopng, giftopnm, ppmtogif, tifftopnm, pnmtotiff and pnmflip (netpbm package)
#
#  Revision history :
#   09/10/2017, V1.0 - Creation by N. Bernaerts
#   01/03/2018, V1.1 - Jpeg lossless rotation with exiftool
# ---------------------------------------------------

# --------------------------
# check tools availability
# --------------------------

command -v mimetype >/dev/null 2>&1 || { zenity --error --text="Please install mimetype [libfile-mimeinfo-perl]"; exit 1; }
command -v exiftool >/dev/null 2>&1 || { zenity --error --text="Please install exiftool [libimage-exiftool-perl]"; exit 1; }
command -v pngtopnm >/dev/null 2>&1 || { zenity --error --text="Please install pngtopnm [netpbm]"; exit 1; }
command -v pnmtopng >/dev/null 2>&1 || { zenity --error --text="Please install pnmtopng [netpbm]"; exit 1; }
command -v giftopnm >/dev/null 2>&1 || { zenity --error --text="Please install giftopnm [netpbm]"; exit 1; }
command -v ppmtogif >/dev/null 2>&1 || { zenity --error --text="Please install ppmtogif [netpbm]"; exit 1; }
command -v tifftopnm >/dev/null 2>&1 || { zenity --error --text="Please install tifftopnm [netpbm]"; exit 1; }
command -v pnmtotiff >/dev/null 2>&1 || { zenity --error --text="Please install pnmtotiff [netpbm]"; exit 1; }
command -v pnmflip >/dev/null 2>&1 || { zenity --error --text="Please install pnmflip [netpbm]"; exit 1; }

# ----------------------
# JPEG rotation tables
# ----------------------

# no tag : no change
# 1 : no change
# 2 : horizontal mirror
# 3 : 180
# 4 : horizontal mirror + 180
# 5 : horizontal mirror + left
# 6 : right
# 7 : horizontal mirror + right
# 8 : left
ARR_LEFT=( "8" "8" "5" "6" "7" "4" "1" "2" "3" )
ARR_RIGHT=( "6" "6" "7" "8" "5" "2" "3" "4" "1" )
ARR_UPDOWN=( "3" "3" "4" "1" "2" "7" "8" "5" "6" )
ARR_MIRROR=( "2" "2" "1" "4" "3" "8" "7" "6" "5" )

# loop to retrieve arguments
while test $# -gt 0
do
	case "$1" in
	"--right") ARR_ROTATE=( "${ARR_RIGHT[@]}" ); PNM_ANGLE="270"; shift; ;;
	"--left") ARR_ROTATE=( "${ARR_LEFT[@]}" ); PNM_ANGLE="90"; shift; ;;
	"--up-down") ARR_ROTATE=( "${ARR_UPDOWN[@]}" ); PNM_ANGLE="180"; shift; ;;
	*) ARR_FILE=( "${ARR_FILE[@]}" "$1" ); shift; ;;
	esac
done

# check rotation is selected
[ "${ARR_ROTATE}" = "" ] && { zenity --error --text="Please select rotation parameter"; exit 1; }

# -------------------------------------
# loop thru PDF files to convert them
# -------------------------------------

# create temporary file
TMP_PNM=$(mktemp --tmpdir XXXXXXXX-org.pnm)
TMP_ROTATE=$(mktemp --tmpdir XXXXXXXX-rot.pnm)

# loop thru files 
for FILE in "${ARR_FILE[@]}"
do
	# remove temporary file
	rm -f "${TMP_ROTATE}"

	# rotate file according to mimetype
	TYPE_FILE=$(mimetype --brief "${FILE}")
	case "${TYPE_FILE}" in

	"image/jpeg")
		# read rotation tag
		ANGLE=$(exiftool -args -Orientation -n "${FILE}" | cut -d'=' -f2)
		[ "${ANGLE}" = "" ] && ANGLE="0"

		# rotate image
		exiftool -overwrite_original -Orientation=${ARR_ROTATE[${ANGLE}]} -n "${FILE}"
		;;

	"image/png")
		# convert image to PNM
		pngtopnm "${FILE}" > "${TMP_PNM}"

		# rotate image
		pnmflip -r${PNM_ANGLE} "${TMP_PNM}" | pnmtopng - > "${TMP_ROTATE}"
		;;

	"image/gif")
		# convert image to PNM
		giftopnm "${FILE}" > "${TMP_PNM}"

		# rotate image
		pnmflip -r${PNM_ANGLE} "${TMP_PNM}" | ppmtogif - > "${TMP_ROTATE}"
		;;

	"image/tiff")
		# convert image to PNM
		tifftopnm "${FILE}" > "${TMP_PNM}" 

		# rotate image
		pnmflip -r${PNM_ANGLE} "${TMP_PNM}" | pnmtotiff - > "${TMP_ROTATE}"
		;;

	*)
		;;
	esac

	# replace original file
	[ -s "${TMP_ROTATE}" ] && mv --force "${TMP_ROTATE}" "${FILE}"

done

# remove temporary file
rm -f "${TMP_PNM}" "${TMP_ROTATE}"
